#!/usr/bin/python3
# https://stackoverflow.com/questions/42570214/displaying-image-using-a-label
# requires 'python3-pyqt5' package; works on X (not Wayland)
import sys
import mmap
import os
import signal

current_pid = os.getpid()

# ensure that e modifier to fopen is supported (otherwise rewrite screen.ch using fcntl)
d = '/proc/' + str(current_pid) + '/fd'
for p in map(lambda e: os.path.join(d,e), os.listdir(d)):
  if not os.path.exists(p): continue # skip descriptor used for reading this directory
  if os.path.isfile(os.readlink(p)):
    print('TROUBLE')
    sys.exit()

# destroy orphaned online display(s)
for e in os.listdir('/proc'):
  if not e.isdigit(): continue
  pid = int(e)
  if pid == current_pid: continue
  with open('/proc/' + str(pid) + '/status', 'r') as f:
    if f.readline().split(':')[1].strip() != 'hello-wayland': continue
    for line in f:
      if line.startswith('PPid:'):
        parent_pid = line.split(':')[1].strip()
        break
  with open('/proc/' + str(parent_pid) + '/status', 'r') as f:
    if f.readline().split(':')[1].strip() != 'virmf':
      os.kill(pid, signal.SIGTERM)

f=open('/dev/null','w'); os.dup2(f.fileno(),2); f.close()
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
width, height = map(int, os.environ.get('screen_size').split('x'))
mm = mmap.mmap(0, width*height*4)
app = QApplication(sys.argv)
qImg = QImage(mm,width,height,width*4,QImage.Format_RGB32)
pixmap01 = QPixmap.fromImage(qImg)
pixmap_image = QPixmap(pixmap01)
label_imageDisplay = QLabel()
label_imageDisplay.setPixmap(pixmap_image)
label_imageDisplay.setAlignment(Qt.AlignCenter)
label_imageDisplay.setScaledContents(True)
label_imageDisplay.setMinimumSize(width,height)
label_imageDisplay.showMinimized()
sys.exit(app.exec_())
