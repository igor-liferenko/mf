@@ -10200,7 +10242,7 @@
      /*now try the system format file area*/ 
   if (w_open_in(&fmt_file)) goto found;
   wake_up_terminal;
-  wterm_ln("Sorry, I can't find that format;"," will try PLAIN.");
+  wterm_ln("Sorry, I can't find that format; will try PLAIN.");
 @.Sorry, I can't find...@>
   update_terminal;
   } 
@@ -10306,17 +10348,17 @@
 variables |cur_name|, |cur_area|, |cur_ext|, and |name_of_file| are
 ready for another attempt at file opening.
 
-@p void prompt_file_name(str_number @!s, str_number @!e)
+@p void prompt_file_name(char *@!s, str_number @!e)
 {@+
 uint16_t k; /*index into |buffer|*/ 
 if (interaction==scroll_mode) wake_up_terminal;
-if (s==@[@<|"input file name"|@>@]) print_err("I can't find file `")@;
+if (strcmp(s,"input file name")==0) print_err("I can't find file `")@;
 @.I can't find file x@>
 else print_err("I can't write on file `");
 @.I can't write on file x@>
 print_file_name(cur_name, cur_area, cur_ext);print_str("'.");
 if (e==@[@<|".tex"|@>@]) show_context();
-print_nl("Please type another ");print(s);
+print_nl("Please type another ");print_str(s);
 @.Please type...@>
 if (interaction < scroll_mode) 
   fatal_error("*** (job aborted, file error in nonstop mode)");
@@ -10337,9 +10379,10 @@
 } 
 
 @ Here's an example of how these conventions are used. Whenever it is time to
-ship out a box of stuff, we shall use the macro |ensure_dvi_open|.
+ship out a box of stuff, we shall use |@<ensure dvi open@>|.
 
-@d ensure_dvi_open	if (output_file_name==0) 
+@<ensure dvi open@>=
+if (output_file_name==0) 
   {@+if (job_name==0) open_log_file();
   pack_job_name(@[@<|".dvi"|@>@]);
   while (!b_open_out(&dvi_file)) 
@@ -10347,7 +10390,7 @@
   output_file_name=b_make_name_string(&dvi_file);
   } 
 
-@<Glob...@>=
+@ @<Glob...@>=
 byte_file @!dvi_file; /*the device-independent output goes here*/ 
 str_number @!output_file_name; /*full name of the output file*/ 
 str_number @!log_name; /*full name of the log file*/ 
@@ -10361,7 +10404,7 @@
 {@+uint8_t old_setting; /*previous |selector| setting*/ 
 int @!k; /*index into |months| and |buffer|*/ 
 uint16_t @!l; /*end of first input line*/ 
-uint8_t @!months0[36], *const @!months = @!months0-1; /*abbreviations of month names*/ 
+@!ASCII_code @!months[]=" JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC"; /*abbreviations of month names*/ 
 old_setting=selector;
 if (job_name==0) job_name=@[@<|"texput"|@>@];
 @.texput@>
@@ -10400,11 +10443,10 @@
 } 
 
 @ @<Print the banner...@>=
-{@+wlog(banner);
+{@+wlog("%s",banner);
 slow_print(format_ident);print_str("  ");
 print_int(day);print_char(' ');
-months="JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC";
-for (k=3*month-2; k<=3*month; k++) wlog(months[k]);
+for (k=3*month-2; k<=3*month; k++) wlog("%c",months[k]);
 print_char(' ');print_int(year);print_char(' ');
 print_two(time/60);print_char(':');print_two(time%60);
 } 
@@ -10504,7 +10546,8 @@
 @ The rest of the \.{TFM} file may be regarded as a sequence of ten data
 arrays having the informal specification
 $$\def\arr$[#1]#2${\&{array} $[#1]$ \&{of} #2}
-\vbox{\halign{\hfil\\{#}&$\,:\,$\arr#\hfil\cr
+\def\PB#1{\arr#1}
+\vbox{\halign{\hfil\\{#}&$\,:\,$#\hfil\cr
 header&|[0 dotdot lh-1]@t\\{stuff}@>|\cr
 char\_info&|[bc dotdot ec]char_info_word|\cr
 width&|[0 dotdot nw-1]fix_word|\cr
@@ -11964,7 +12007,7 @@
 
 @p void write_dvi(dvi_index @!a, dvi_index @!b)
 {@+int k;
-for (k=a; k<=b; k++) write(dvi_file, dvi_buf[k]);
+for (k=a; k<=b; k++) write(dvi_file, "%c", dvi_buf[k]);
 } 
 
 @ To put a byte in the buffer without paying the cost of invoking a procedure
@@ -12330,7 +12373,7 @@
 
 @ @<Initialize variables as |ship_out| begins@>=
 dvi_h=0;dvi_v=0;cur_h=h_offset;dvi_f=null_font;
-ensure_dvi_open;
+@<ensure dvi open@>;
 if (total_pages==0) 
   {@+dvi_out(pre);dvi_out(id_byte); /*output the preamble*/ 
 @^preamble of \.{DVI} file@>
@@ -13186,10 +13229,11 @@
 computed by the normal rules; if it exceeds this limit, the reference
 point is simply moved down until the limiting depth is attained.
 
-@d vpack(...)	vpackage(__VA_ARGS__, max_dimen) /*special case of unconstrained depth*/ 
-
 @p
-  pointer vpackage(pointer @!p, scaled @!h, small_number @!m, scaled @!l)
+#define vpack(...)	@[vpackage(__VA_ARGS__, max_dimen)@]
+    /*special case of unconstrained depth*/ 
+
+pointer vpackage(pointer @!p, scaled @!h, small_number @!m, scaled @!l)
 {@+
 pointer r; /*the box node that will be returned*/ 
 scaled @!w, @!d, @!x; /*width, depth, and natural height*/ 
@@ -15074,9 +15118,9 @@
 the program would not have been so strange.
 @:PASCAL}{\PASCAL@>
 
-@d math_spacing	@;@/
+@d math_spacing_str	@;@/
 @t\hskip-35pt@>
-math_spacing
+"math_spacing"
 @t$ \hskip-35pt$@>
 
 @<Glob...@>=
@@ -16388,7 +16432,7 @@
 should no longer be active; then |goto continue| if a line from |r| to |cur_p| is
 infeasible, otherwise record a new feasible break@>;
   } 
-end: 
+end: ;
 #ifdef @!STAT
 @<Update the value of |printed_node| for symbolic displays@>;
 #endif
@@ -16409,7 +16453,9 @@
 halfword @!b; /*badness of test line*/ 
 int @!d; /*demerits of test line*/ 
 bool @!artificial_demerits; /*has |d| been forced to zero?*/ 
+#ifdef @!STAT
 pointer @!save_link; /*temporarily holds value of |link(cur_p)|*/ 
+#endif
 scaled @!shortfall; /*used in badness calculations*/ 
 
 @ @<Make sure that |pi| is in the proper range@>=
@@ -17841,7 +17887,7 @@
 ligature and a |lig_ptr| field that points to a |char_node| or is |null|.
 We have
 $$|cur_r|=\cases{|character(lig_stack)|,&if |lig_stack > null|;\cr
-  |qi(hu[j+1])|,&if |lig_stack==null| and |j < n|;\cr
+  \hbox{|qi(hu[j+1])|},&if |lig_stack==null| and |j < n|;\cr
   bchar,&if |lig_stack==null| and |j==n|.\cr}$$
 
 @<Glob...@>=
@@ -24297,14 +24343,13 @@
 if (ready_already==314159) goto start_of_TEX;
 @<Check the ``constant'' values...@>@;
 if (bad > 0) 
-  {@+wterm_ln("Ouch---my internal constants have been clobbered!",
-    "---case ", bad: 1);
+  {@+wterm_ln("Ouch---my internal constants have been clobbered!"
+    "---case %d", bad);
 @.Ouch...clobbered@>
   exit(0);
   } 
 initialize(); /*set global variables to their starting values*/ 
 #ifdef @!INIT
-if (!get_strings_started()) exit(0);
 init_prim(); /*call |primitive| for each primitive*/ 
 init_str_ptr=str_ptr;init_pool_ptr=pool_ptr;fix_date_and_time();
 #endif
@@ -24314,7 +24359,7 @@
 history=spotless; /*ready to go!*/ 
 main_control(); /*come to life*/ 
 final_cleanup(); /*prepare for death*/ 
-end_of_TEX: close_files_and_terminate();
+close_files_and_terminate();
 ready_already=0;
 return 0; }
 
@@ -24356,34 +24401,33 @@
 
 @<Output statistics...@>=
 if (log_opened) 
-  {@+wlog_ln( ' ' );
-  wlog_ln("Here is how much of TeX's memory"," you used:");
+  {@+wlog_ln(" ");
+  wlog_ln("Here is how much of TeX's memory you used:");
 @.Here is how much...@>
-  wlog( ' ' , str_ptr-init_str_ptr: 1," string");
-  if (str_ptr!=init_str_ptr+1) wlog( 's' );
-  wlog_ln(" out of ", max_strings-init_str_ptr: 1);@/
-  wlog_ln( ' ' , pool_ptr-init_pool_ptr: 1," string characters out of ",
-    pool_size-init_pool_ptr: 1);@/
-  wlog_ln( ' ' , lo_mem_max-mem_min+mem_end-hi_mem_min+2: 1,@|
-    " words of memory out of ", mem_end+1-mem_min: 1);@/
-  wlog_ln( ' ' , cs_count: 1," multiletter control sequences out of ",
-    hash_size: 1);@/
-  wlog( ' ' , fmem_ptr: 1," words of font info for ",
-    font_ptr-font_base: 1," font");
-  if (font_ptr!=font_base+1) wlog( 's' );
-  wlog_ln(", out of ", font_mem_size: 1," for ", font_max-font_base: 1);@/
-  wlog( ' ' , hyph_count: 1," hyphenation exception");
-  if (hyph_count!=1) wlog( 's' );
-  wlog_ln(" out of ", hyph_size: 1);@/
-  wlog_ln( ' ' , max_in_stack: 1,"i,", max_nest_stack: 1,"n,",@|
-    max_param_stack: 1,"p,",@|
-    max_buf_stack+1: 1,"b,",@|
-    max_save_stack+6: 1,"s stack positions out of ",@|
-    stack_size: 1,"i,",
-    nest_size: 1,"n,",
-    param_size: 1,"p,",
-    buf_size: 1,"b,",
-    save_size: 1, 's' );
+  wlog(" %d string", str_ptr-init_str_ptr);
+  if (str_ptr!=init_str_ptr+1) wlog( "s" );
+  wlog_ln( " out of %d", max_strings-init_str_ptr);@/
+  wlog_ln( " %d string characters out of %d", pool_ptr-init_pool_ptr,
+    pool_size-init_pool_ptr);@/
+  wlog_ln(" %d words of memory out of %d", lo_mem_max-mem_min+mem_end-hi_mem_min+2,@|
+    mem_end+1-mem_min);@/
+  wlog_ln(" %d multiletter control sequences out of %d", cs_count, hash_size);@/
+  wlog(" %d words of font info for %d font", fmem_ptr, font_ptr-font_base);
+  if (font_ptr!=font_base+1) wlog("s");
+  wlog_ln( ", out of %d for %d", font_mem_size, font_max-font_base);@/
+  wlog(" %d hyphenation exception", hyph_count);
+  if (hyph_count!=1) wlog("s");
+  wlog_ln( " out of %d", hyph_size);@/
+  wlog_ln(" %di,%dn,%dp,%db,%ds stack positions out of %di,%dn,%dp,%db,%ds", 
+    max_in_stack, max_nest_stack,@|
+    max_param_stack,@|
+    max_buf_stack+1,@|
+    max_save_stack+6,@|
+    stack_size,
+    nest_size,
+    param_size,
+    buf_size,
+    save_size );
   } 
 
 @ We get to the |final_cleanup| routine when \.{\\end} or \.{\\dump} has
@@ -24535,7 +24579,7 @@
 case 10: slow_print(n);@+break;
 case 11: check_mem(n > 0);@+break; /*check wellformedness; print new busy locations if |n > 0|*/ 
 case 12: search_mem(n);@+break; /*look for pointers to |n|*/ 
-case 13: {@+read(term_in, l);print_cmd_chr(n, l);
+case 13: {@+fscanf(term_in.f," %d",&l);print_cmd_chr(n, l);
   } @+break;
 case 14: for (k=0; k<=n; k++) print(buffer[k]);@+break;
 case 15: {@+font_in_short_display=null_font;short_display(n);
@@ -24670,8 +24714,8 @@
 @ @<Declare act...@>=
 @t\4@>@<Declare procedures needed in |do_extension|@>@;
 void do_extension(void)
-{@+int i, @!j, @!k; /*all-purpose integers*/ 
-pointer @!p, @!q, @!r; /*all-purpose pointers*/ 
+{@+int @!k; /*all-purpose integer*/ 
+pointer @!p; /*all-purpose pointer*/ 
 switch (cur_chr) {
 case open_node: @<Implement \.{\\openout}@>@;@+break;
 case write_node: @<Implement \.{\\write}@>@;@+break;
@@ -25008,22 +25052,6 @@
 itself will get a new section number.
 @^system dependencies@>
 
-@* Index.
-Here is where you can find all uses of each identifier in the program,
-with underlined entries pointing to where the identifier was defined.
-If the identifier is only one letter long, however, you get to see only
-the underlined entries. {\sl All references are to section numbers instead of
-page numbers.}
-
-This index also lists error messages and other aspects of the program
-that you might want to look up some day. For example, the entry
-for ``system dependencies'' lists all sections that should receive
-special attention from people who are installing \TeX\ in a new
-operating environment. A list of various things that can't happen appears
-under ``this can't happen''. Approximately 40 sections are listed under
-``inner loop''; these account for about 60\pct! of \TeX's running time,
-exclusive of input and output.
-
 @ Appendix: Replacement of the string pool file.
 @d str_0_255 	"^^@@^^A^^B^^C^^D^^E^^F^^G^^H^^I^^J^^K^^L^^M^^N^^O"@/
 	"^^P^^Q^^R^^S^^T^^U^^V^^W^^X^^Y^^Z^^[^^\\^^]^^^^^_"@/
@@ -25808,10 +25836,10 @@
 @d str_505 "else"
 @<|"else"|@>=@+505
 @ 
-@d str_506 "TeXinputs:"
+@d str_506 "TeXinputs/"
 @d TEX_area 506
 @ 
-@d str_507 "TeXfonts:"
+@d str_507 "TeXfonts/"
 @d TEX_font_area 507
 @ 
 @d str_508 ".fmt"
@@ -26878,3 +26906,19 @@
 @ @<|pool_ptr| initialization@>= str_start_668
 
 @ @<|str_ptr| initialization@>= 668
+
+@* Index.
+Here is where you can find all uses of each identifier in the program,
+with underlined entries pointing to where the identifier was defined.
+If the identifier is only one letter long, however, you get to see only
+the underlined entries. {\sl All references are to section numbers instead of
+page numbers.}
+
+This index also lists error messages and other aspects of the program
+that you might want to look up some day. For example, the entry
+for ``system dependencies'' lists all sections that should receive
+special attention from people who are installing \TeX\ in a new
+operating environment. A list of various things that can't happen appears
+under ``this can't happen''. Approximately 40 sections are listed under
+``inner loop''; these account for about 60\pct! of \TeX's running time,
+exclusive of input and output.
