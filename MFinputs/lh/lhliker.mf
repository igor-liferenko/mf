
% lkligtbl.mf
%
%% Cyrillic font container with T2 encoding beta-support
%
% This file is future part of lxfonts package
% Version 3.5 // Patchlevel=0
% (c) A.Berdnikov
%
% This package is freeware product under conditions similar to
% those of D. E. Knuth specified for the Computer Modern family of fonts.
% In particular, only the authors are entitled to modify this file
% (and all this package as well) and to save it under the same name.
%
% Content:
%
% Macro definitions for lig & kern data
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if known loaded_lgligtbl: endinput; fi
loaded_lgligtbl:=1; % if known this file has been loaded

%if unknown loaded_lgerrors:
%   index:=0; input lgerrors; % error messages;
%fi

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%                                                               %%
%%  Procedures which may be used to make the ligtable data       %%
%%  independent from the particular font coding scheme           %%
%%                                                               %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if unknown dummy_kern_char:
   numeric dummy_kern_char; dummy_kern_char:=0;
fi

boolean debug_ligdata;  debug_ligdata:=false;

def beginligtable =
   boolean flag_gener, flag_sp, flag_fst;
   flag_gener:=false; flag_sp:=false; flag_fst:=true;
   def table_data = enddef;
enddef;

vardef labelchar (text chars) =
   forsuffixes $=chars:
      if (str $) <> "": if known $: if $ > -1:
         if flag_sp:
            flag_fst:=false;
            expandafter def expandafter table_data expandafter =
               table_data , $ :
            enddef;
         else:
            expandafter def expandafter table_data expandafter =
               table_data   $ :
            enddef;
         fi
         flag_gener:=true; flag_sp:=false;
      fi fi fi
   endfor;
enddef;

vardef setkern @# (text chars)=
   if flag_gener:
      forsuffixes $=chars:
         if (str $) <> "": if known $: if $ > -1:
            if flag_sp:
               expandafter def expandafter table_data expandafter =
                  table_data , $ kern @#
               enddef;
            else:
               expandafter def expandafter table_data expandafter =
                  table_data   $ kern @#
               enddef;
            fi
            flag_sp:=true;
         fi fi fi
      endfor;
   fi;
enddef;

vardef setlig(suffix charA, charB) =
   if flag_gener:
      if (known charA) and (known charB):
         if (charA > -1) and (charB > -1):
            if flag_sp:
               expandafter def expandafter table_data expandafter =
                  table_data , charA =: charB
               enddef;
            else:
               expandafter def expandafter table_data expandafter =
                  table_data   charA =: charB
               enddef;
         fi;
         flag_sp:=true;
      fi fi;
   fi;
enddef;

vardef endligtable=
   if debug_ligdata: showtoken table_data; fi
   if flag_gener:
      if not flag_sp:
         if not flag_fst:
            message ("Something is wrong in ligtable:");
            showtoken table_data;
            message ("Dummy kerning with char "
                   & (decimal dummy_kern_char) & " is inserted");
            expandafter def expandafter table_data expandafter =
               table_data   dummy_kern_char kern 0
            enddef;
            ligtable table_data;
         fi
      else:
         ligtable table_data;
      fi;
   fi;
   def table_data = enddef;
enddef;

vardef liggroup @# (text chars)=
   def @# = enddef;
   forsuffixes $=chars:
      if (str $) <> "": if known $: if $ > -1:
            expandafter def expandafter @# expandafter =
               @# , $
            enddef;
      fi fi fi
   endfor;
   if debug_ligdata: showtoken @#; fi
enddef;

% end-of-file
boolean altcoding,kapitel,concrete;
altcoding:=true; kapitel:=false; concrete:=false;
% This is lhliker.mf in text format as of 2023/14/4
% created by LHfonts (TeX4MF) version 3.5
%
%


beginligtable
   labelchar (
          CYR_.HRDSN
         ,CYR_.SFTSN
    );
            setkern [k#] (
                   CYR_.ZH
                  ,CYR_.H
             );
   labelchar (
          CYR_.A
      if serifs:
      fi
    );
            setkern [k#] (
                   CYR_.O
                  ,CYR_.F
                  ,CYR_.S
             );
            setkern [kk#] (
                   CYR_.T
                  ,CYR_.HRDSN
                  ,CYR_.CH
             );
   if serifs:
            setkern [kk#] (
                   CYR_.U
             );
   else:
            setkern [k#] (
                   CYR_.U
             );
   fi
   if not TITLEfont:
      if SmallCapsfont:
            setkern [k#] (
                   CYR_.o
                  ,CYR_.f
                  ,CYR_.s
                  ,CYR_.ch
             );
            setkern [kk#] (
                   CYR_.t
                  ,CYR_.hrdsn
                  ,CYR_.u
             );
      elseif ROMANfont:
            setkern [k#] (
                   CYR_.t
                  ,CYR_.hrdsn
             );
            setkern [kk#] (
                   CYR_.ch
             );
      else:
            setkern [k#] (
                   CYR_.hrdsn
                  ,CYR_.k
                  ,CYR_.n
                  ,CYR_.p
                  ,CYR_.t
                  ,CYR_.yu
                  ,CYR_.i
                  ,CYR_.i_shrt
                  ,CYR_.c
                  ,CYR_.sh
                  ,CYR_.shch
                  ,CYR_.sftsn
                  ,CYR_.ery
                  ,CYR_.u
             );
      fi
   fi
 endligtable;

if concrete:

   beginligtable
      labelchar ( CYR_.D );
               setkern [k#] (
                      CYR_.O
                     ,CYR_.F
                     ,CYR_.S
                );
               setkern [kk#] (
                      CYR_.T
                     ,CYR_.HRDSN
                     ,CYR_.CH
                );
         if serifs:
               setkern [kk#] (
                      CYR_.U
                );
         else:
               setkern [k#] (
                      CYR_.U
                );
         fi
         if not TITLEfont:
            if SmallCapsfont:
               setkern [k#] (
                      CYR_.o
                     ,CYR_.f
                     ,CYR_.s
                     ,CYR_.ch
                );
               setkern [kk#] (
                      CYR_.t
                     ,CYR_.hrdsn
                     ,CYR_.u
                );
            elseif ROMANfont:
               setkern [k#] (
                      CYR_.ch
                     ,CYR_.t
                     ,CYR_.hrdsn
                );
            else:
               setkern [k#] (
                      CYR_.hrdsn
                     ,CYR_.k
                     ,CYR_.n
                     ,CYR_.p
                     ,CYR_.t
                     ,CYR_.yu
                     ,CYR_.i
                     ,CYR_.i_shrt
                     ,CYR_.c
                     ,CYR_.sh
                     ,CYR_.shch
                     ,CYR_.sftsn
                     ,CYR_.ery
                     ,CYR_.u
                );
            fi
         fi
    endligtable;


   beginligtable
      labelchar ( CYR_.L );
               setkern [k#] (
                      CYR_.O
                     ,CYR_.F
                     ,CYR_.S
                );
               setkern [kk#] (
                      CYR_.T
                     ,CYR_.HRDSN
                     ,CYR_.CH
                );
      if serifs:
               setkern [kk#] (
                      CYR_.U
                );
      else:
               setkern [k#] (
                      CYR_.U
                );
      fi
      if not TITLEfont:
         if SmallCapsfont:
               setkern [k#] (
                      CYR_.o
                     ,CYR_.f
                     ,CYR_.s
                     ,CYR_.ch
                );
               setkern [kk#] (
                      CYR_.t
                     ,CYR_.hrdsn
                     ,CYR_.u
                );
         elseif ROMANfont:
               setkern [k#] (
                      CYR_.ch
                     ,CYR_.t
                     ,CYR_.hrdsn
                );
         else:
               setkern [k#] (
                      CYR_.hrdsn
                     ,CYR_.k
                     ,CYR_.n
                     ,CYR_.p
                     ,CYR_.t
                     ,CYR_.yu
                     ,CYR_.i
                     ,CYR_.i_shrt
                     ,CYR_.c
                     ,CYR_.sh
                     ,CYR_.shch
                     ,CYR_.sftsn
                     ,CYR_.ery
                     ,CYR_.u
                );
         fi
      fi
    endligtable;

fi

beginligtable
   labelchar ( CYR_.K );
   labelchar (
          CYR_.ZH
         ,CYR_.H
    );
            setkern [k#] (
                   CYR_.O
                  ,CYR_.F
                  ,CYR_.S
             );
   if not TITLEfont:
      if SmallCapsfont:
            setkern [k#] (
                   CYR_.o
                  ,CYR_.f
                  ,CYR_.s
             );
      else:
            setkern [k#] (
                   CYR_.ch
             );
         if ROMANfont:
            setkern [k#] (
                   CYR_.t
                  ,CYR_.hrdsn
             );
         fi
      fi
   fi
 endligtable;


beginligtable
   labelchar (
          CYR_.O
         ,CYR_.F
         ,CYR_.YU
         ,CYR_.EREV
    );
            setkern [k#] (
                   CYR_.A
               if concrete:
                  ,CYR_.D
                  ,CYR_.L
               else:
                  ,CYR_.D
               fi
                  ,CYR_.ZH
                  ,CYR_.H
                  ,CYR_.U
               if serifs:
                  ,CYR_.YA
               fi
             );
   if not TITLEfont:
      if SmallCapsfont:
            setkern [k#] (
               if kapitel:
                   CYR_.a
               fi
                  ,CYR_.a
               if concrete:
                  ,CYR_.d
                  ,CYR_.l
               else:
                  ,CYR_.d
                  ,CYR_.l
               fi
                  ,CYR_.zh
                  ,CYR_.h
                  ,CYR_.u
               if serifs:
                  ,CYR_.ya
               fi
             );
      elseif ROMANfont:
            setkern [k#] (
               if kapitel:
                   CYR_.a
               fi
             );
      fi
   fi
 endligtable;


beginligtable
   labelchar ( CYR_.T );
   labelchar (
          CYR_.G
    );
            setkern [kk#] (
                   CYR_.A
               if concrete:
                  ,CYR_.D
                  ,CYR_.L
               else:
                  ,CYR_.D
               fi
               if serifs:
                  ,CYR_.YA
               fi
             );
   if not concrete:
      if serifs:
            setkern [k#] (
                   CYR_.L
             );
      else:
            setkern [-u#] (
                   CYR_.L
             );
      fi
   fi
   if not TITLEfont:
      if SmallCapsfont:
            setkern [kk#] (
               if kapitel:
                   CYR_.a
               fi
                  ,CYR_.a
               if concrete:
                  ,CYR_.d
                  ,CYR_.l
               else:
                  ,CYR_.d
                  ,CYR_.l
               fi
                  ,CYR_.zh
                  ,CYR_.h
                  ,CYR_.u
               if serifs:
                  ,CYR_.ya
               fi
             );
      else:
            setkern [kk#] (
                   CYR_.a
                  ,CYR_.o
                  ,CYR_.e
                  ,CYR_.yo
                  ,CYR_.s
                  ,CYR_.f
             );
         if ROMANfont:
            setkern [kk#] (
                   CYR_.d
                  ,CYR_.l
                  ,CYR_.ya
               if kapitel:
                  ,CYR_.a
               fi
             );
         else:
            setkern [kk#] (
                   CYR_.i
                  ,CYR_.i_shrt
                  ,CYR_.c
                  ,CYR_.sh
                  ,CYR_.shch
                  ,CYR_.sftsn
                  ,CYR_.ery
                  ,CYR_.u
                  ,CYR_.hrdsn
                  ,CYR_.l
                  ,CYR_.m
             );
         fi
      fi
      if altcoding:
            setkern [kk#] (
                   [ASCII "."]
                  ,[ASCII ","]
                  ,[ASCII ";"]
                  ,[ASCII ":"]
             );
      fi
   fi
 endligtable;


beginligtable
   labelchar (
          CYR_.U
    );
   if serifs:
            setkern [kk#] (
                   CYR_.A
               if concrete:
                  ,CYR_.D
                  ,CYR_.L
               fi
                  ,CYR_.YA
             );
   if not concrete:
            setkern [-u#] (
                   CYR_.D
                  ,CYR_.L
             );
   fi
   else:
            setkern [k#] (
                   CYR_.A
             );
            setkern [-u#] (
                   CYR_.D
                  ,CYR_.L
             );
   fi
            setkern [k#] (
                   CYR_.O
                  ,CYR_.F
                  ,CYR_.S
             );
   if not TITLEfont:
      if SmallCapsfont:
            setkern [kkk#] (
               if kapitel:
                   CYR_.a
               fi
                  ,CYR_.a
               if concrete:
                  ,CYR_.d
                  ,CYR_.l
               fi
               if serifs:
                  ,CYR_.ya
               fi
             );
            setkern [kk#] (
               if concrete:
                   CYR_.d
                  ,CYR_.l
               fi
             );
            setkern [k#] (
                   CYR_.o
                  ,CYR_.f
                  ,CYR_.s
             );
      else:
         if serifs:
            setkern [kk#] (
                   CYR_.a
                  ,CYR_.o
                  ,CYR_.e
                  ,CYR_.yo
                  ,CYR_.s
             );
         else:
            setkern [k#] (
                   CYR_.a
                  ,CYR_.o
                  ,CYR_.e
                  ,CYR_.yo
                  ,CYR_.s
             );
         fi
         if ROMANfont:
            setkern [kk#] (
                   CYR_.d
                  ,CYR_.l
                  ,CYR_.ya
               if kapitel:
                  ,CYR_.a
               fi
             );
         else:
            setkern [kkk#] (
                   CYR_.i
                  ,CYR_.i_shrt
                  ,CYR_.c
                  ,CYR_.sh
                  ,CYR_.shch
                  ,CYR_.sftsn
                  ,CYR_.ery
                  ,CYR_.u
                  ,CYR_.hrdsn
                  ,CYR_.l
                  ,CYR_.m
             );
         fi
      fi
      if altcoding:
            setkern [kk#] (
                   [ASCII "."]
                  ,[ASCII ","]
                  ,[ASCII ";"]
                  ,[ASCII ":"]
             );
      fi
   fi
 endligtable;


beginligtable
   labelchar (
          CYR_.R
    );
            setkern [kk#] (
                   CYR_.A
                  ,CYR_.D
                  ,CYR_.L
               if serifs:
                  ,CYR_.YA
               fi
             );
   if not TITLEfont:
      if SmallCapsfont:
            setkern [kk#] (
               if kapitel:
                   CYR_.a
               fi
                  ,CYR_.a
               if concrete:
                  ,CYR_.d
                  ,CYR_.l
               else:
                  ,CYR_.d
               fi
               if serifs:
                  ,CYR_.ya
               fi
             );
      else:
            setkern [k#] (
                   CYR_.a
                  ,CYR_.o
                  ,CYR_.e
                  ,CYR_.yo
             );
            setkern [kk#] (
                   CYR_.d
                  ,CYR_.l
             );
      fi
      if altcoding:
            setkern [kk#] (
                   [ASCII "."]
                  ,[ASCII ","]
                  ,[ASCII ";"]
                  ,[ASCII ":"]
             );
      fi
   fi
 endligtable;

if TITLEfont: endinput \\ fi;

if SmallCapsfont:

    u#:=lower.u#;
   k#:=-.5u#; kk#:=-1.5u#; kkk#:=-2u#;
 


   beginligtable
      labelchar (
         if kapitel:
             CYR_.a
         fi
            ,CYR_.a
            ,CYR_.hrdsn
            ,CYR_.sftsn
         if SmallCapsfont:
         fi
         if SmallCapsfont:
         fi
         if SmallCapsfont:
         fi
         if serifs:
         fi
       );
               setkern [k#] (
                      CYR_.o
                     ,CYR_.f
                     ,CYR_.s
                     ,CYR_.t
                     ,CYR_.hrdsn
                     ,CYR_.ch
                );
               setkern [kk#] (
                      CYR_.u
                );
    endligtable;

   if concrete:


      beginligtable
         labelchar ( CYR_.d );
                  setkern [k#] (
                         CYR_.o
                        ,CYR_.f
                        ,CYR_.s
                        ,CYR_.t
                        ,CYR_.hrdsn
                        ,CYR_.ch
                   );
                  setkern [kk#] (
                         CYR_.u
                   );
       endligtable;


      beginligtable
         labelchar ( CYR_.l );
                  setkern [k#] (
                         CYR_.o
                        ,CYR_.f
                        ,CYR_.s
                        ,CYR_.t
                        ,CYR_.hrdsn
                        ,CYR_.ch
                   );
                  setkern [kk#] (
                         CYR_.u
                   );
       endligtable;

      fi


   beginligtable
      labelchar ( CYR_.k );
      labelchar (
             CYR_.zh
            ,CYR_.h
       );
               setkern [k#] (
                      CYR_.o
                     ,CYR_.f
                     ,CYR_.s
                );
    endligtable;


   beginligtable
      labelchar (
             CYR_.o
            ,CYR_.f
            ,CYR_.b
            ,CYR_.yu
            ,CYR_.erev
       );
               setkern [k#] (
                  if kapitel:
                      CYR_.a
                  fi
                     ,CYR_.a
                     ,CYR_.d
                     ,CYR_.l
                     ,CYR_.zh
                     ,CYR_.h
                     ,CYR_.u
                  if serifs:
                     ,CYR_.ya
                  fi
                );
    endligtable;


   beginligtable
      labelchar ( CYR_.t );
      labelchar (
             CYR_.g
            ,CYR_.r
       );
               setkern [k#] (
                  if kapitel:
                      CYR_.a
                  fi
                     ,CYR_.a
                     ,CYR_.d
                     ,CYR_.l
                  if serifs:
                     ,CYR_.ya
                  fi
                );
    endligtable;


   beginligtable
      labelchar (
             CYR_.u
       );
               setkern [kk#] (
                  if kapitel:
                      CYR_.a
                  fi
                     ,CYR_.a
                     ,CYR_.d
                     ,CYR_.l
                  if serifs:
                     ,CYR_.ya
                  fi
                );
               setkern [k#] (
                      CYR_.o
                     ,CYR_.f
                     ,CYR_.s
                );
    endligtable;

else:

   if ROMANfont:


      beginligtable
         labelchar (
                CYR_.a
          );
                  setkern [k#] (
                         CYR_.ch
                        ,CYR_.u
                     if serifs:
                     fi
                   );
       endligtable;

      if concrete:

         beginligtable
            labelchar ( CYR_.d );
                     setkern [k#] (
                            CYR_.o
                           ,CYR_.s
                           ,CYR_.t
                           ,CYR_.hrdsn
                           ,CYR_.ch
                           ,CYR_.u
                           ,CYR_.l
                      );
                     setkern [kk#] (
                            CYR_.ch
                      );
          endligtable;


         beginligtable
            labelchar ( CYR_.l );
                     setkern [k#] (
                            CYR_.o
                           ,CYR_.s
                           ,CYR_.t
                           ,CYR_.hrdsn
                           ,CYR_.ch
                           ,CYR_.u
                           ,CYR_.l
                      );
                     setkern [kk#] (
                            CYR_.ch
                      );
          endligtable;

      fi

      beginligtable
         labelchar ( CYR_.t );
         labelchar (
                CYR_.g
            if kapitel:
               ,CYR_.r
            fi
          );
         if serifs:
                  setkern [k#] (
                         CYR_.a
                   );
         fi
                  setkern [k#] (
                         CYR_.d
                        ,CYR_.l
                     if kapitel:
                        ,CYR_.a
                     fi
                        ,CYR_.ya
                   );
         if altcoding:
                  setkern [kk#] (
                         [ASCII "."]
                        ,[ASCII ","]
                   );
         fi
       endligtable;


      beginligtable
         labelchar ( CYR_.k );
         labelchar (
                CYR_.zh
               ,CYR_.h
          );
                  setkern [k#] (
                         CYR_.a
                   );
                  setkern [k#] (
                         CYR_.o
                        ,CYR_.s
                        ,CYR_.e
                        ,CYR_.yo
                   );
       endligtable;


      beginligtable
         labelchar (
                CYR_.u
          );
                  setkern [k#] (
                         CYR_.a
                        ,CYR_.o
                        ,CYR_.s
                        ,CYR_.e
                        ,CYR_.yo
                        ,CYR_.ya
                   );
                  setkern [kk#] (
                     if kapitel:
                         CYR_.a
                     fi
                   );
                  setkern [-u#] (
                         CYR_.d
                        ,CYR_.l
                   );
         if altcoding:
                  setkern [kk#] (
                         [ASCII "."]
                        ,[ASCII ","]
                   );
         fi
       endligtable;

   else:


      beginligtable
         labelchar ( CYR_.e );
         labelchar (
                CYR_.yo
          );
                  setkern [-u#] (
                         CYR_.f
                        ,CYR_.a
                   );
                  setkern [k#] (
                         CYR_.l
                        ,CYR_.m
                   );
       endligtable;


      beginligtable
         labelchar ( CYR_.l );
                  setkern [k#] (
                         CYR_.l
                        ,CYR_.m
                        ,CYR_.hrdsn
                   );
                  setkern [kk#] (
                         CYR_.ch
                   );
       endligtable;

   fi


   beginligtable
      labelchar (
             CYR_.hrdsn
            ,CYR_.sftsn
         if SmallCapsfont:
         fi
         if SmallCapsfont:
         fi
         if SmallCapsfont:
         fi
         if kapitel:
            ,CYR_.a
         fi
       );
      if ROMANfont:
               setkern [-u#] (
                      CYR_.u
                );
               setkern [k#] (
                      CYR_.t
                     ,CYR_.hrdsn
                );
         if concrete:
               setkern [k#] (
                      CYR_.d
                     ,CYR_.l
                );
         fi
      else:
               setkern [k#] (
                      CYR_.l
                     ,CYR_.m
                     ,CYR_.hrdsn
                );
      fi
               setkern [kk#] (
                      CYR_.ch
                );
               setkern [k#] (
                      CYR_.o
                     ,CYR_.f
                );
    endligtable;


   beginligtable
      labelchar ( CYR_.s );
      labelchar (
             CYR_.o
            ,CYR_.b
            ,CYR_.yu
            ,CYR_.r
            ,CYR_.f
            ,CYR_.erev
       );
      if ROMANfont:
               setkern [k#] (
                      CYR_.d
                     ,CYR_.zh
                     ,CYR_.h
                     ,CYR_.ya
                  if kapitel:
                     ,CYR_.a
                  fi
                );
      else:
               setkern [-u#] (
                      CYR_.f
                     ,CYR_.a
                );
               setkern [k#] (
                      CYR_.l
                     ,CYR_.m
                );
      fi
    endligtable;

fi
