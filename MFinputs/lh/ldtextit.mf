%
% ldtextit.mf
%
%% Cyrillic font container with T2 encoding beta-support
%
% This file is future part of lxfonts package
% Version 3.5 // Patchlevel=0
% (c) O.Lapko
%
% This package is freeware product under conditions similar to
% those of D. E. Knuth specified for the Computer Modern family of fonts.
% In particular, only the authors are entitled to modify this file
% (and all this package as well) and to save it under the same name.
%
% Content:
%
% Driver file for Text Italic fonts
% - modified TEXTIT.MF in Computer Modern fonts
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

LHver_check(3,5); % like |version_check| in ec


input lxpseudo;

mode_setup; font_setup;
pseudo_setup;    % |pseudo_setup| from ec


if ligs>1: font_coding_scheme:="TeX text/Cyr - "&enc_name;
  if altcoding:
    spanish_shriek=oct"074"; spanish_query=oct"076";
    input italig;  % letter ligatures
  fi
else: font_coding_scheme:=if ligs=0: "TeX typewriter text/Cyr - "&enc_name
  else: "TeX text without f-ligs/Cyr - "&enc_name fi;
  if altcoding:
    spanish_shriek=oct"016"; spanish_query=oct"017";
  fi
fi

if altcoding:
   input itall;   % lower case (minuscules)
   input italsp;  % lowercase specials (dotless \i, ligature \ae, etc.)
fi

input lgcyri;     % Cyrillic lower case (minuscules)

if wncoding: %Part used in WNCYR
   input lgilig;    % italic dotless i,j
fi

font_slant slant; font_x_height x_height#;
if monospace: font_normal_space 9u#; % no stretching or shrinking
   font_quad 18u#;
   font_extra_space 9u#;
   letter_fit#:=letter_fit:=0;
else: font_normal_space 6u#+2letter_fit#;
   font_normal_stretch 3u#; font_normal_shrink 2u#;
   font_quad 18u#+4letter_fit#;
   font_extra_space 2u#;
fi


if altcoding:
   input romanu;   % upper case (majuscules)
   input greeku;   % upper case Greek letters
   input itald;	   % numerals
   input italp;	   % ampersand, question marks, currency sign
   input romspu;   % uppercase specials (\AE, \OE, \O)
   input punct;	   % punctuation symbols common to roman and italic text
   input accent;   % accents common to roman and italic text
   if ligs<=1:
      input romsub; % substitutes for ligatures
   fi
fi

if not vfcoding: % ligs for both altcoding and wncoding (dashes & quotes)
   if ligs>0: input comlig; fi % ligatures common with roman text
fi

input lgcyru;	   % input common shapes
input lgcyrsym;	   % <<, >>, No
input lgcyracc;	   % Cyrillic accents
if old_cyr:
   input lgocyrac; % Cyrillic Old Slav accents & signs
fi

if wncoding: %Part used in WNCYR
   input itald;	   % numerals
   input lgpunct;  % excerpts from punct.mf
   input lgitalp;  % italic question mark
fi


if monospace:
   if altcoding: input llmligtb; fi % input ligs for quotes
   if wncoding : input lwnligs;  fi % input ligs for Cyrillic in WNCYR
else:
   k#:=-.5u#; kk#:=-1.5u#; kkk#:=-2u#; % three degrees of kerning
   %
   % Latin ligs & kerns
   %   There are just the same ligs and kerns as in CM
   %   but they are built in more visible form
   %
   TITLEfont:=false; SmallCapsfont:=false; ROMANfont:=false;
   if altcoding:
      ligtable "d": "w": "l":
		    "l" kern +u#;
      ligtable "F": "V":
		    "o" kern kk#,
		    "e" kern kk#,
		    "u" kern kk#,
		    "r" kern kk#,
		    "a" kern kk#,
		    "A" kern kkk#,
	  "K": "X": "O" kern k#,
		    "C" kern k#,
		    "G" kern k#,
		    "Q" kern k#;
      ligtable "T": "y" kern kk#,
	       "Y": "e" kern kk#,
		    "o" kern kk#,
		    "r" kern kk#,
		    "a" kern kk#,
		    "u" kern kk#,
	  "P": "W": "A" kern kk#;
      ligtable "O": "D":
		    "X" kern k#,
		    "W" kern k#,
		    "A" kern k#,
		    "V" kern k#,
		    "Y" kern k#;
      ligtable "A": "R":
		    "n" kern k#,
		    "l" kern k#,
		    "r" kern k#,
		    "u" kern k#,
		    "m" kern k#,
		    "t" kern k#,
		    "i" kern k#,
		    "C" kern k#,
		    "O" kern k#,
		    "G" kern k#,
		    "h" kern k#,
		    "b" kern k#,
		    "U" kern k#,
		    "k" kern k#,
		    "v" kern k#,
		    "w" kern k#,
		    "Q" kern k#,
	       "L": "T" kern kk#,
		    "Y" kern kk#,
		    "V" kern kkk#,
		    "W" kern kkk#,
       "b": "c": "e": "o": "p": "r":
		    "e" kern -u#,
		    "a" kern -u#,
		    "o" kern -u#,
		    "d" kern -u#,
		    "c" kern -u#,
		    "g" kern -u#,
		    "q" kern -u#;
      ligtable "n": "'" kern kkk#;
      %
      % there are ligature/kern programs for |"f"| in the {\tt italig} file
      % and for |"-"|, |"`"|, and |"'"| in the {\tt comlig} file
      input llvligtb; % input ligs for quotes
   fi
   scantokens("input "&(substring(fonteq-2,fonteq) of param_base)&"liker"); % Cyrillic ligs & kerns
fi

bye.
%end of file
